{"remainingRequest":"D:\\Campusrecruitment\\springboot123456\\src\\main\\resources\\front\\front\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\Campusrecruitment\\springboot123456\\src\\main\\resources\\front\\front\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Campusrecruitment\\springboot123456\\src\\main\\resources\\front\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Campusrecruitment\\springboot123456\\src\\main\\resources\\front\\front\\src\\pages\\qiye\\add.vue?vue&type=template&id=941b568c&scoped=true&","dependencies":[{"path":"D:\\Campusrecruitment\\springboot123456\\src\\main\\resources\\front\\front\\src\\pages\\qiye\\add.vue","mtime":1713276120000},{"path":"D:\\Campusrecruitment\\springboot123456\\src\\main\\resources\\front\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Campusrecruitment\\springboot123456\\src\\main\\resources\\front\\front\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\Campusrecruitment\\springboot123456\\src\\main\\resources\\front\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Campusrecruitment\\springboot123456\\src\\main\\resources\\front\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}